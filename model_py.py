# -*- coding: utf-8 -*-
"""model.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1D-GfBCtypGjl22Ja1u_07oxxfzKo9FHL
"""

def train_model(model, dataloader, num_epochs=10):
    model.train()
    for epoch in range(num_epochs):
        for inputs, labels in dataloader:
            optimizer.zero_grad()
            outputs = model(inputs)
            loss = criterion(outputs, labels)
            loss.backward()
            optimizer.step()
        print(f"Epoch [{epoch+1}/{num_epochs}], Loss: {loss.item():.4f}")

# Example dataset (replace with real data)
class ActionDataset(data.Dataset):
    def __init__(self, video_clips, labels):
        self.video_clips = video_clips
        self.labels = labels

    def __len__(self):
        return len(self.video_clips)

    def __getitem__(self, idx):
        clip = self.video_clips[idx]  # Load video clip
        label = self.labels[idx]
        return clip, label

# Train the model
dataset = ActionDataset(["clip_1.mp4", "clip_2.mp4"], [0, 1])
dataloader = data.DataLoader(dataset, batch_size=2, shuffle=True)

train_model(model, dataloader)